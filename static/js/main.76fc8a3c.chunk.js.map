{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","countFeedback","className","styles","list","map","option","index","item","button","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","App","state","event","setState","prevState","target","this","Math","round","countTotalFeedback","Object","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uPAeeA,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCYQC,EAlBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAClC,OACE,oBAAIC,UAAWC,IAAOC,KAAtB,SACGJ,EAAQK,KAAI,SAACC,EAAQC,GAAT,OACX,oBAAIL,UAAWC,IAAOK,KAAtB,SACE,wBACEN,UAAWC,IAAOM,OAClBC,KAAMJ,EACNK,QAASV,EAHX,SAKGK,KAN4BC,SCoB1BK,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACGJ,EAAOC,EAAUC,EAAM,EACtB,gCACE,4CACA,uCAAUF,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UAGF,sDCoCOC,E,4MA7CbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPd,cAAgB,SAAAmB,GACd,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAMG,OAAOb,KAAOY,EAAUF,EAAMG,OAAOb,MAAQ,O,wDAK1D,WAAsB,IAAD,EACYc,KAAKL,MACpC,OAFmB,EACXN,KADW,EACLC,QADK,EACIC,M,6CAIzB,WACE,OAAOU,KAAKC,MAAOF,KAAKL,MAAMN,KAAOW,KAAKG,qBAAwB,O,oBAGpE,WAAU,IAAD,EACwBH,KAAKL,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBf,EAAU4B,OAAOC,KAAKL,KAAKL,OACjC,OACE,eAAC,EAAD,CAAStB,MAAO,wBAAhB,UACE,cAAC,EAAD,CACEG,QAASA,EACTC,cAAeuB,KAAKvB,gBAEtB,cAAC,EAAD,CACEY,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,KAAKG,qBACZV,mBAAoBO,KAAKM,2C,GAvCjBC,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,OAAS,gCAAgC,KAAO,8BAA8B,KAAO,iC","file":"static/js/main.76fc8a3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Section;\r\n","import styles from './FeedbackOptions.module.css';\r\nconst FeedbackOptions = ({ options, countFeedback }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {options.map((option, index) => (\r\n        <li className={styles.item} key={index}>\r\n          <button\r\n            className={styles.button}\r\n            name={option}\r\n            onClick={countFeedback}\r\n          >\r\n            {option}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {good + neutral + bad > 0 ? (\r\n        <div>\r\n          <h2>Statistics</h2>\r\n          <p>Good :{good}</p>\r\n          <p>Neutral :{neutral}</p>\r\n          <p>Bad :{bad}</p>\r\n          <p>Total :{total}</p>\r\n          <p>Positive feedback :{positivePercentage}%</p>\r\n        </div>\r\n      ) : (\r\n        <h2>No feedback given</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\n\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedback = event => {\n    this.setState(prevState => {\n      return {\n        [event.target.name]: prevState[event.target.name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const options = Object.keys(this.state);\n    return (\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          options={options}\n          countFeedback={this.countFeedback}\n        ></FeedbackOptions>\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        ></Statistics>\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__28ZkN\",\"list\":\"FeedbackOptions_list__25XVS\",\"item\":\"FeedbackOptions_item__1s7x2\"};"],"sourceRoot":""}